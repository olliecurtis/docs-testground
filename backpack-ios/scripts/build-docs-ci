#!/usr/bin/env node

const fs = require('fs');
const {
    promisify
} = require("util");
const {
    exec
} = require('child_process');
const execAsync = promisify(exec);

const [node, path, releaseTag, ...rest] = process.argv;

async function buildDocs() {
    fs.mkdirSync(`./docs`, function(err) {
      if(err) {
          console.log(err);
          process.exit(1);
      }
    });

    fs.mkdirSync(`./docs/versions`, function(err) {
      if(err) {
          console.log(err);
          process.exit(1);
      }
    });

    fs.mkdirSync(`./docs/versions/${releaseTag}`, function(err) {
      if(err) {
          console.log(err);
          process.exit(1);
      }
    });

    fs.mkdirSync(`./docs/versions/latest`, function(err) {
      if(err) {
          console.log(err);
          process.exit(1);
      }
    });

    fs.writeFile(`docs/404.html`,
`<!DOCTYPE html>
  <html>
    <meta http-equiv="refresh" content="1;url=/ios/versions/latest" />
    <script type="text/javascript">
      const iosDocsPath = (window.location + '').split('ios/versions/latest');
      if (iosDocsPath.length > 1) {
        window.location = \`/ios/versions/${releaseTag}\${iosDocsPath[1]}\`;
      }
    </script>
  </html>
`, { flag: 'w' }, function(err) {
      if(err) {
          console.log(err);
          process.exit(1);
      }
    });

    fs.writeFile(`docs/index.html`,
`<!DOCTYPE html>
  <html>
    <meta http-equiv="refresh" content="0;url=/ios/versions/latest" />
  </html>
`, { flag: 'w' }, function(err) {
      if(err) {
          console.log(err);
          process.exit(1);
      }
    });

    fs.writeFile(`docs/versions/latest/index.html`, 
`<!DOCTYPE html>
  <html>
    <meta http-equiv="refresh" content="0;url=/ios/versions/${releaseTag}" />
  </html>
`, { flag: 'w' }, function(err) {
      if(err) {
          console.log(err);
          process.exit(1);
      }
    });

    await execAsync(`bundle exec rake "docs['./docs/versions/${releaseTag}']"`, function(err) {
      if(err) {
          console.log(err);
          process.exit(1);
      }
    });
}

buildDocs();

